--> Rules of the Constructor
     --> Constructor name must be same as class name
     --> Constructor cannot have return type.
     --> Syntax:-  Access Modifier Constructor Name(){
                       //statement
                   }
--> Constructor is executed during the object creation.
--> Constructor is categorised into 2 types
     --> Default Constructor(Implicit):- Default constructor is one which is generated by compiler.
     --> Default Constructor doesn't have any input parameter and doesn't have any implementation, but UDNPC doesn't have any input but having implementation.
     --> User-Defined Constructor(Explicit):- It is one which is generated by user.
         -->It can be categorised into 2 types
               --> User-Defined Parameterised Constructor(UDPC)
               --> User-Define Non-Parameterised Constructor(UDNPC)
         --> UDPC:- It is one which is generated by user and if the constructor has any input parameter
         --> UDNPC:- If the constructor is not having input parameter or if the user is not passing any values inside the constructor.
--> Every class has an implicit constructor.
      public class Cube{
         public static void main(String[] args){
            Cube c = new Cube();     It will invoke default constructor which is generated by compiler.
         }
      }
--> If we define any constructor inside the class then compiler will not generate ang default constructor inside the class.

    public class Cube{
        Cube(int i){

        }
        System.out.println("Value of i is:- " + i);
    }
    public static void main(String[] args){
         Cube c = new Cube(10);
         Cube c1 = new Cube();   Compile Time error: because the user is defined constructor inside the clas. So complier will not generate any default constructor.
    }

--> Constructor is one which creates object and initialise the states(instance variable).
--> Purpose of Constructor
    --> Constructor helps to create object.
    --> To initialise local variable to the instance variable at the time of object creation.
    --> The purpose of default constructor is to generate default value of the instance variable.
    --> The variable which is declared inside the constructor is called local variable.
    --> We cannot access the local variable values outside the constructor or outside the methods.

--> Constructor Overloading
    --> In a class when having more then one constructor having same name but different input parameter.
    --> Different input parameter in the sense we can change the number of parameters
        --> We can change the datatypes.
        --> We can change the sequence of the parameter.
    --> In constructor overloading variable name should be considered.
    --> Example:- We can change the number of parameters
                   Demo(int i){
                    //statement
                   }
                   Demo(int i, int j){
                    //statement
                   }
                 We can change datatypes
                   Demo(String s){
                    //statement
                   }
                 We can change the sequence of the parameter
                   Demo(int i, long l){
                    //statement
                   }
                   Demo(long l, int i){
                    //statement
                   }
